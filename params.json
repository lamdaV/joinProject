{
  "name": "Joinproject",
  "tagline": "A repository for our CSSE 333 project.",
  "body": "# Join Project [![Build Status](https://travis-ci.org/lamdaV/joinProject.svg?branch=master)](https://travis-ci.org/lamdaV/joinProject)\r\n\r\nAuthors: David Lam, Kennan French, and Christopher Knight\r\n\r\n# Description:\r\nA repository for our CSSE 333 project. The goal of this project is to create a working prototype demonstration of a Tinder for Gamers. Not in the dating sense but as a social network for gamers to connect with other gamers with similar interest.\r\n\r\n# Requirements:\r\n  - Node.js\r\n  - http-server\r\n  - Putty or SSH client\r\n\r\n# How to use (Local):\r\n1. Download the repository.\r\n2. Navigate to the root of the repository folder via terminal.\r\n3. Run `npm install` to update/retrieve required npm packages.\r\n4. Run `npm install http-server --g` to install required test package.\r\n5. Run `npm start` to build main.js located in `public\\js`. This will build the main.js upon any detected changes. Note: the terminal will be inactive.\r\n6. Run `http-server -p <port>` to start the server.\r\n  - Alternative: Rather than using `http-server`, you can launch `node app.js` or `nodemon app.js` instead. Everything else still follows.\r\n7. Open Putty or SSH client.\r\n8. Go to `Connection -> SSH -> Tunnels`.\r\n9. Set port to `3306` and destination to `localhost:3306`. Then click the add button.\r\n10. Go back to `Session` and enter the hostname given in the email.\r\n11. Optional: Save Session with a session name below.\r\n12. Click open and login with emailed credentials.\r\n13. Now open a new terminal window and navigate to the repository.\r\n14. Optional: Run `npm install nodemon -g` to install nodemon.\r\n15. Run `nodemon server.js` or `node server.js`. This will run a server on port `3333`.\r\n16. Open your prefered browser and go to `localhost:<port>` where `<port>` is the port used in `http-server`.\r\n17. You should now see the react webpage.\r\n\r\n# How to use (Remote):\r\n1. SSH into the provided VM (see steps above).\r\n2. Enter into the terminal `cd joinProject/`.\r\n3. Recommended: enter into the terminal `git pull origin master`.\r\n4. Run the shell script by entering this into the terminal `./run.sh`.\r\n5. You can now access the server remotely by going to `joincsse333.csse.rose-hulman.edu:3330` (only when on campus).\r\n6. Note: The servers (web and API server) will now run indefinitely. To shut down the servers, run `forever stopall`.\r\n\r\n# List of Pages:\r\n|         Page          |    Assigned                       |    Status     |\r\n|:---------------------:|:---------------------------------:|:-------------:|\r\n| User Profile          | Kennan French                     | In Progress   |\r\n| User Account Setting  | Kennan French                     | In Progress   |\r\n| Game Info             | David Lam                         | Completed     |\r\n| Search Result         | David Lam                         | Completed     |\r\n| Preference Selection  | Kennan French                     | In Progress   |\r\n| Matching              | David Lam                         | Completed     |\r\n| Conversation          | ~~Kennan French~~ <br/> David Lam | Completed     |\r\n\r\n# Milestones:\r\n## Milestone 01:\r\n### David Lam:\r\n- [x] Create login page\r\n- [x] Account creation page\r\n- [x] Set up nav bar\r\n\r\n#### Extras:\r\n- [x] Email Validation\r\n- [x] Password Validation\r\n- [x] Account Validation\r\n- [x] Basic Routing\r\n- [x] Set up Express Server\r\n\r\n### Kennan French:\r\n- [x] Create preference selection form\r\n- [x] Create message/chat UI\r\n- [x] Design profile page\r\n\r\n### Christopher Knight:\r\n- [x] Create scripts\r\n- [x] Tutorials for javascript, node, mysql\r\n\r\n## Milestone 02:\r\n### David Lam:\r\n  - [x] Connect account creation page to backend\r\n  - [x] Start games page\r\n  - [x] Peer review stored procedures\r\n\r\n#### Extras:\r\n  - [x] Have users retype password for front end validation\r\n  - [x] Token-based authentication\r\n  - [x] Begin implementing stored procedures\r\n  - [x] Sign out procedures\r\n  - [x] Modified Create stored procedure\r\n  - [x] Modified Login stored procedure\r\n  - [x] Made GetGameByTitle stored procedure\r\n  - [x] Start Game searching\r\n\r\n### Kennan French:\r\n  - [x] Learn React\r\n  - [ ] Hook stuff up with David's stuff (related to above)\r\n  - [x] Write js to do the stuff I said js would do on previous pages\r\n  - [ ] Unify/standardize css, custom div classes\r\n  - [x] At least registration front-end validation (David Lam)\r\n  - [x] Create dummy user for VM (David Lam)\r\n\r\n### Christopher Knight:\r\n  - [x] Stored procedures for user creation + account info updates\r\n  - [x] Stored procedures for creating + updating available hours\r\n  - [x] Stored procedures for user rating\r\n  - [x] Help get mysql talk to front end\r\n  - [x] Figure out dummy user permissions\r\n\r\n## Milestone 03:\r\n### David Lam:\r\n  - [x] Matching page\r\n  - [x] Add tags to game page\r\n\r\n### Extras:\r\n  - [x] Complete Game searching\r\n  - [x] Made games page database dependent\r\n  - [x] Added more security checks on authentication-required pages\r\n  - [x] Set up pages for User Profile, Preference, and Messages\r\n  - [x] Added ESLint\r\n  - [x] Added Travis CI integration\r\n  - [x] Reduced Coupling in handling token authentication\r\n  - [x] Cleaned code running linter\r\n\r\n### Kennan French:\r\n  - [x] Make schedule widget\r\n  - [ ] Make rest of widgets needed for user profile page\r\n  - [ ] Profile page should be done\r\n  - [x] More integration\r\n  - [ ] User preferences/settings page\r\n\r\n### Christopher Knight:\r\n  - [x] Continue writing stored procedures as needed\r\n  - [x] Figure out mysql data dump\r\n  - [x] Add lots of data to tables\r\n\r\n## Milestone 04:\r\n### David Lam\r\n  - [x] Begin integrating matching page front end with back end (dependent on Chris)\r\n\r\n### Extras:\r\n  - [x] Improved Linter with React\r\n  - [x] Commented Existing Code\r\n  - [x] Get basic Chat components\r\n  - [x] Completed Chat components\r\n  - [x] Match page accept/reject now functional\r\n  - [x] Users can add games to their \"library\" from the Game Page\r\n  - [x] Users can now view their library\r\n  - [x] Users can now delete games from their library\r\n  - [x] SQL Stored Procedures written:\r\n      - get_game_by_id\r\n      - add_message\r\n      - add_friend\r\n      - get_message_history\r\n      - is_game_in_library\r\n      - get_user_library\r\n      - delete_game_from_library\r\n\r\n### Kennan French\r\n  - [x] Scroll box (class? widget?) (David Lam)\r\n  - [ ] Integrate widgets with React virtualization + fix other React \"quirks\"\r\n  - [ ] User preferences/settings page (done, just fighting with git to publish)\r\n\r\n### Christopher Knight\r\n  - [x] Match page back end/implement matching algorithm\r\n\r\n### Group\r\n  - [x] Study for test\r\n  - [x] Heuristics discussion  \r\n\r\n## Milestone 05:\r\n### David Lam\r\n  - [x] Remove friend frontend\r\n  - [ ] Work on paper\r\n\r\n### Extras:\r\n  - [x] Updated SQL Stored Procedures:\r\n    - get_friends_list (Now returns alphabetically)\r\n  - [x] Wrote SQL Stored Procedures:\r\n    - delete_friend (Chris was asleep when writing UI)\r\n\r\n### Christopher Knight\r\n  - [x] Remove friend backend (David Lam)\r\n  - [ ] Work on paper\r\n  - [ ] Add index to tables\r\n\r\n### Kennan French\r\n  - [ ] Integrate widgets with React virtualization + fix other React \"quirks\"\r\n  - [ ] User preferences/settings page (done, just fighting with git to publish)\r\n  - [ ] Work on paper\r\n  - [ ] Integrate Profile page\r\n  - [ ] User Rate other Users\r\n  - [ ] Compatibility with Mozilla Firefox\r\n  - [ ] Hash Passwords\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}
-- MySQL Script generated by MySQL Workbench
-- 04/19/16 19:04:20
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema JoinSchema
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `JoinSchema` ;

-- -----------------------------------------------------
-- Schema JoinSchema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `JoinSchema` DEFAULT CHARACTER SET latin1 ;
USE `JoinSchema` ;

-- -----------------------------------------------------
-- Table `JoinSchema`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`User` ;

CREATE TABLE `User` (
  `UserID` int(11) NOT NULL AUTO_INCREMENT,
  `TimeZone` varchar(45) NOT NULL,
  `Password` varchar(45) NOT NULL,
  `Email` varchar(45) NOT NULL,
  PRIMARY KEY (`UserID`),
  UNIQUE KEY `UserID_UNIQUE` (`UserID`),
  UNIQUE KEY `Email_UNIQUE` (`Email`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`User`
(`UserID`,
`TimeZone`,
`Password`,
`Email`)
VALUES
('1','mountain','password!!','emailjunk1@spam.com'),
('2','central','pass123123','emailjunk2@spam.com'),
('3','central','dbpassword','emailjunk3@spam.com'),
('4','pacific','supersecure','emailjunk4@spam.com'),
('5','eastern','12345678','emailjunk5@spam.com'),
('6','eastern','qwerty123','emailjunk6@spam.com'),
('7','eastern','password','emailjunk7@spam.com'),
('8','eastern','password12','emailjunk8@spam.com'),
('9','eastern','password9909','emailjunk9@spam.com'),
('10','eastern','passhello','emailjunk10@spam.com'),
('11','eastern','helloWorld','emailjunk11@spam.com'),
('12','eastern','iamagoodpass','emailjunk12@spam.com'),
('13','eastern','lastpasssucks','emailjunk13@spam.com'),
('14','eastern','mustmemorize','emailjunk14@spam.com'),
('15','eastern','happiness','emailjunk15@spam.com'),
('16','eastern','musicwins','emailjunk16@spam.com'),
('17','eastern','DaveWillPlayLeague','emailjunk17@spam.com'),
('18','eastern','tryndamere','emailjunk18@spam.com'),
('19','eastern','password!123123','emailjunk19@spam.com'),
('20', 'eastern', 'safepassword123', 'leagueoflegends@lamd.com');



-- -----------------------------------------------------
-- Table `JoinSchema`.`Available Hour`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Available Hour` ;

CREATE TABLE `Available Hour` (
  `HourID` int(11) NOT NULL,
  `Day` varchar(45) NOT NULL,
  PRIMARY KEY (`HourID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`Available Hour`
(`HourID`,
`Day`)
VALUES
('1','Sunday'),
('2','Sunday'),
('3','Sunday'),
('4','Sunday'),
('5','Sunday'),
('6','Sunday'),
('7','Sunday'),
('8','Sunday'),
('9','Sunday'),
('10','Sunday'),
('11','Sunday'),
('12','Sunday'),
('13','Sunday'),
('14','Sunday'),
('15','Sunday'),
('16','Sunday'),
('17','Sunday'),
('18','Sunday'),
('19','Sunday'),
('20', 'Sunday');
-- -----------------------------------------------------
-- Table `JoinSchema`.`Available`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Available` ;

CREATE TABLE `Available` (
  `UserID` int(11) DEFAULT NULL,
  `HourID` int(11) DEFAULT NULL,
  KEY `Available_Hour_idx` (`HourID`),
  CONSTRAINT `Available_Hour` FOREIGN KEY (`HourID`) REFERENCES `Available Hour` (`HourID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

INSERT INTO `JoinSchema`.`Available`
(`UserID`,
`HourID`)
VALUES
('1','1'),
('2','2'),
('3','3'),
('4','4'),
('5','5'),
('6','6'),
('7','7'),
('8','8'),
('9','9'),
('10','10'),
('11','11'),
('12','12'),
('13','13'),
('14','14'),
('15','15'),
('16','16'),
('17','17'),
('18','18'),
('19','19'),
('20', '20');


-- -----------------------------------------------------
-- Table `JoinSchema`.`Message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Message` ;

CREATE TABLE `Message` (
  `MessageID` int(11) NOT NULL,
  `TimeStamp` varchar(140) DEFAULT NULL,
  `Contents` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`MessageID`),
  UNIQUE KEY `MessageID_UNIQUE` (`MessageID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`Message`
(`MessageID`,
`TimeStamp`,
`Contents`)
VALUES
('1','1', 'hello'),
('2','2', 'goodbye'),
('3','3', 'wow'),
('4','4', 'I'),
('5','5', 'LOVE'),
('6','6', 'LEAGUE'),
('7','7', 'OF'),
('8','8', 'LEGENDS'),
('9','9', 'PLZ'),
('10','10', 'PLAY'),
('11','11', 'LEAGUE'),
('12','12', 'So bored'),
('13','13', 'tedious'),
('14','14', 'why'),
('15','15', 'can''t'),
('16','16', 'I'),
('17','17', 'Speed'),
('18','18', 'up'),
('19','19', 'life'),
('20', '20', 'seriously');


-- -----------------------------------------------------
-- Table `JoinSchema`.`Comes From`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Comes From` ;

CREATE TABLE `Comes From` (
  `UserID` int(11) DEFAULT NULL,
  `MessageID` int(11) DEFAULT NULL,
  KEY `Comes_From_User_idx` (`UserID`),
  KEY `Comes_From_Message_FK_idx` (`MessageID`),
  CONSTRAINT `Comes_From_User_FK` FOREIGN KEY (`UserID`) REFERENCES `User` (`UserID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Comes_From_Message_FK` FOREIGN KEY (`MessageID`) REFERENCES `Message` (`MessageID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`Comes From`
(`UserID`,
`MessageID`)
VALUES
('1','1'),
('2','2'),
('3','3'),
('4','4'),
('5','5'),
('6','6'),
('7','7'),
('8','8'),
('9','9'),
('10','10'),
('11','11'),
('12','12'),
('13','13'),
('14','14'),
('15','15'),
('16','16'),
('17','17'),
('18','18'),
('19','19'),
('20', '20');


-- -----------------------------------------------------
-- Table `JoinSchema`.`Game`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Game` ;

CREATE TABLE `Game` (
  `GameID` int(11) NOT NULL AUTO_INCREMENT,
  `Title` varchar(45) DEFAULT NULL,
  `Price` decimal(10,2) DEFAULT NULL,
  `Rating` varchar(45) DEFAULT NULL,
  `Platform` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`GameID`),
  UNIQUE KEY `GameID_UNIQUE` (`GameID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`Game`
(`GameID`,
`Title`,
`Price`,
`Rating`,
`Platform`)
VALUES
('1','game1', '1', 'e', 'computer'),
('2','game2', '2', 'e', 'computer'),
('3','game3', '3', 'e', 'computer'),
('4','game4', '4', 'e', 'computer'),
('5','game5', '5', 'e', 'computer'),
('6','game6', '6', 'e', 'computer'),
('7','game7', '7', 'e', 'computer'),
('8','game8', '8', 'e', 'computer'),
('9','game9', '9', 'e', 'computer'),
('10','game10', '10', 'e', 'computer'),
('11','game11', '11', 'e', 'computer'),
('12','game12', '12', 'e', 'computer'),
('13','game13', '13', 'e', 'computer'),
('14','game14', '14', 'e', 'computer'),
('15','game15', '15', 'e', 'computer'),
('16','game16', '16', 'e', 'computer'),
('17','game17', '17', 'e', 'computer'),
('18','game18', '18', 'e', 'computer'),
('19','game19', '19', 'e', 'computer'),
('20', 'game20', '20', 'e', 'computer');

-- -----------------------------------------------------
-- Table `JoinSchema`.`Gaming Accounts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Gaming Accounts` ;

CREATE TABLE `Gaming Accounts` (
  `GameAccountID` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(45) NOT NULL,
  `Type` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`GameAccountID`),
  UNIQUE KEY `GameAccountID_UNIQUE` (`GameAccountID`),
  UNIQUE KEY `UserName_UNIQUE` (`UserName`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`Gaming Accounts`
(`GameAccountID`,
`UserName`,
`Type`)
VALUES
('1','user1', 'Curse'),
('2','user2', 'Curse'),
('3','user3', 'Curse'),
('4','user4', 'Curse'),
('5','user5', 'Curse'),
('6','user6', 'Curse'),
('7','user7', 'Curse'),
('8','user8', 'Curse'),
('9','user9', 'Curse'),
('10','user10', 'Steam'),
('11','user11', 'Steam'),
('12','user12', 'Steam'),
('13','user13', 'Steam'),
('14','user14', 'Steam'),
('15','user15', 'Steam'),
('16','user16', 'Steam'),
('17','user17', 'Steam'),
('18','user18', 'Steam'),
('19','user19', 'Steam'),
('20', 'user20', 'Steam');

-- -----------------------------------------------------
-- Table `JoinSchema`.`Goes_To`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Goes To` ;

CREATE TABLE `Goes To` (
  `UserID` int(11) DEFAULT NULL,
  `MessageID` int(11) DEFAULT NULL,
  KEY `Goes_To_User_idx` (`UserID`),
  KEY `Goes_To_Message_idx` (`MessageID`),
  CONSTRAINT `Goes_To_Message` FOREIGN KEY (`MessageID`) REFERENCES `Message` (`MessageID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Goes_To_User` FOREIGN KEY (`UserID`) REFERENCES `User` (`UserID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`Goes To`
(`UserID`,
`MessageID`)
VALUES
('1','1'),
('2','2'),
('3','3'),
('4','4'),
('5','5'),
('6','6'),
('7','7'),
('8','8'),
('9','9'),
('10','10'),
('11','11'),
('12','12'),
('13','13'),
('14','14'),
('15','15'),
('16','16'),
('17','17'),
('18','18'),
('19','19'),
('20', '20');

-- -----------------------------------------------------
-- Table `JoinSchema`.`Preference`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Preference` ;

CREATE TABLE `Preference` (
  `PreferenceID` int(10) NOT NULL AUTO_INCREMENT,
  `FavoriteGenre` varchar(45) DEFAULT NULL,
  `FavoritePlatform` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`PreferenceID`),
  UNIQUE KEY `PreferenceID_UNIQUE` (`PreferenceID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`Preference`
(`PreferenceID`,
`FavoriteGenre`,
`FavoritePlatform`)
VALUES
('1','shooter', 'computer'),
('2','shooter', 'computer'),
('3','shooter', 'computer'),
('4','shooter', 'computer'),
('5','shooter', 'computer'),
('6','shooter', 'computer'),
('7','shooter', 'computer'),
('8','shooter', 'computer'),
('9','shooter', 'computer'),
('10','shooter', 'computer'),
('11','shooter', 'computer'),
('12','shooter', 'computer'),
('13','shooter', 'computer'),
('14','shooter', 'computer'),
('15','shooter', 'computer'),
('16','shooter', 'computer'),
('17','shooter', 'computer'),
('18','shooter', 'computer'),
('19','shooter', 'computer'),
('20', 'shooter', 'computer');


-- -----------------------------------------------------
-- Table `JoinSchema`.`Has`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Has` ;

CREATE TABLE `Has` (
  `PreferenceID` int(11) DEFAULT NULL,
  `UserID` int(11) DEFAULT NULL,
  KEY `Has_Preference_FK_idx` (`PreferenceID`),
  KEY `Has_UserID_FK_idx` (`UserID`),
  CONSTRAINT `Has_Preference_FK` FOREIGN KEY (`PreferenceID`) REFERENCES `Preference` (`PreferenceID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Has_User_FK` FOREIGN KEY (`UserID`) REFERENCES `User` (`UserID`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

INSERT INTO `JoinSchema`.`Has`
(`PreferenceID`,
`UserID`)
VALUES
('1','1'),
('2','2'),
('3','3'),
('4','4'),
('5','5'),
('6','6'),
('7','7'),
('8','8'),
('9','9'),
('10','10'),
('11','11'),
('12','12'),
('13','13'),
('14','14'),
('15','15'),
('16','16'),
('17','17'),
('18','18'),
('19','19'),
('20', '20');


-- -----------------------------------------------------
-- Table `JoinSchema`.`Tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Tag` ;

CREATE TABLE `Tag` (
  `TagID` int(11) NOT NULL AUTO_INCREMENT,
  `TagName` varchar(45) NOT NULL,
  PRIMARY KEY (`TagID`),
  UNIQUE KEY `TagID_UNIQUE` (`TagID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`Tag`
(`TagID`,
`TagName`)
VALUES
('1','tag1'),
('2','tag2'),
('3','tag3'),
('4','tag4'),
('5','tag5'),
('6','tag6'),
('7','tag7'),
('8','tag8'),
('9','tag9'),
('10','tag10'),
('11','tag11'),
('12','tag12'),
('13','tag13'),
('14','tag14'),
('15','tag15'),
('16','tag16'),
('17','tag17'),
('18','tag18'),
('19','tag19'),
('20', 'tag20');


-- -----------------------------------------------------
-- Table `JoinSchema`.`Have`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Have` ;

CREATE TABLE `Have` (
  `GameID` int(11) DEFAULT NULL,
  `TagID` int(11) DEFAULT NULL,
  KEY `GameID_idx` (`GameID`),
  KEY `Have_Tag_FK_idx` (`TagID`),
  CONSTRAINT `Have_Game_FK` FOREIGN KEY (`GameID`) REFERENCES `Game` (`GameID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Have_Tag_FK` FOREIGN KEY (`TagID`) REFERENCES `Tag` (`TagID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`Have`
(`GameID`,
`TagID`)
VALUES
('1','1'),
('2','2'),
('3','3'),
('4','4'),
('5','5'),
('6','6'),
('7','7'),
('8','8'),
('9','9'),
('10','10'),
('11','11'),
('12','12'),
('13','13'),
('14','14'),
('15','15'),
('16','16'),
('17','17'),
('18','18'),
('19','19'),
('20', '20');


-- -----------------------------------------------------
-- Table `JoinSchema`.`Owns`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Owns` ;

CREATE TABLE `Owns` (
  `GameID` int(11) DEFAULT NULL,
  `UserID` int(11) DEFAULT NULL,
  KEY `Owns_Game_FK_idx` (`GameID`),
  KEY `Owns_User_FK_idx` (`UserID`),
  CONSTRAINT `Owns_Game_FK` FOREIGN KEY (`GameID`) REFERENCES `Game` (`GameID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Owns_User_FK` FOREIGN KEY (`UserID`) REFERENCES `User` (`UserID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

INSERT INTO `JoinSchema`.`Owns`
(`GameID`,
`UserID`)
VALUES
('1','1'),
('2','2'),
('3','3'),
('4','4'),
('5','5'),
('6','6'),
('7','7'),
('8','8'),
('9','9'),
('10','10'),
('11','11'),
('12','12'),
('13','13'),
('14','14'),
('15','15'),
('16','16'),
('17','17'),
('18','18'),
('19','19'),
('20', '20');


-- -----------------------------------------------------
-- Table `JoinSchema`.`Play As`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Play As` ;

CREATE TABLE `Play As` (
  `UserID` int(11) DEFAULT NULL,
  `GameAccountID` int(11) DEFAULT NULL,
  KEY `Play_As_User_FK_idx` (`UserID`),
  KEY `Play_As_GA_FK_idx` (`GameAccountID`),
  CONSTRAINT `Play_As_GA_FK` FOREIGN KEY (`GameAccountID`) REFERENCES `Gaming Accounts` (`GameAccountID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Play_As_User_FK` FOREIGN KEY (`UserID`) REFERENCES `User` (`UserID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `JoinSchema`.`Play As`
(`UserID`,
`GameAccountID`)
VALUES
('1','1'),
('2','2'),
('3','3'),
('4','4'),
('5','5'),
('6','6'),
('7','7'),
('8','8'),
('9','9'),
('10','10'),
('11','11'),
('12','12'),
('13','13'),
('14','14'),
('15','15'),
('16','16'),
('17','17'),
('18','18'),
('19','19'),
('20', '20');


-- -----------------------------------------------------
-- Table `JoinSchema`.`Rates`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinSchema`.`Rates` ;

CREATE TABLE `Rates` (
  `UserRateID` int(11) DEFAULT NULL,
  `UserRatedID` int(11) DEFAULT NULL,
  `Score` int(11) DEFAULT NULL,
  KEY `Rates_User_FK_idx` (`UserRateID`),
  KEY `Rates_User_FK2_idx` (`UserRatedID`),
  CONSTRAINT `Rates_User_FK1` FOREIGN KEY (`UserRateID`) REFERENCES `User` (`UserID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Rates_User_FK2` FOREIGN KEY (`UserRatedID`) REFERENCES `User` (`UserID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

INSERT INTO `JoinSchema`.`Rates`
(`UserRateID`,
`UserRatedID`,
`SCORE`)
VALUES
('1','2', '1'),
('2','3', '2'),
('3','4', '3'),
('4','5', '4'),
('5','6', '5'),
('6','7', '6'),
('7','8', '7'),
('8','9', '8'),
('9','10', '9'),
('10','11', '10'),
('11','12', '1'),
('12','13', '2'),
('13','14', '3'),
('14','15', '4'),
('15','16', '5'),
('16','17', '6'),
('17','18', '7'),
('18','19', '8'),
('19','20', '9'),
('20', '1', '10');

DROP TABLE IF EXISTS `JoinSchema`.`Is Friends With` ;

CREATE TABLE `Is Friends With` (
  `UserID1` int(11) DEFAULT NULL,
  `UserID2` int(11) DEFAULT NULL,
  KEY `UserID1_FK_idx` (`UserID1`),
  KEY `UserID2_FK_idx` (`UserID2`),
  CONSTRAINT `UserID2_FK` FOREIGN KEY (`UserID2`) REFERENCES `User` (`UserID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `UserID1_FK` FOREIGN KEY (`UserID1`) REFERENCES `User` (`UserID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

INSERT INTO `JoinSchema`.`Is Friends With`
(`UserID1`,
`UserID2`)
VALUES
('1','1'),
('2','2'),
('3','3'),
('4','4'),
('5','5'),
('6','6'),
('7','7'),
('8','8'),
('9','9'),
('10','10'),
('11','11'),
('12','12'),
('13','13'),
('14','14'),
('15','15'),
('16','16'),
('17','17'),
('18','18'),
('19','19'),
('20', '20');



DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Is_Friends_With`()
BEGIN
SET @UserID1 = 21;
SET @UserID2 = 21;

loop1: LOOP
INSERT INTO `Is Friends With`
VALUES (@UserID1, @UserID2);
IF(@UserID1 < 1000)
THEN 
SET @UserID1 = @UserID1 + 1;
SET @UserID2 = @UserID2 + 1;

ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_AH`()
BEGIN
SET @HourID = 21;
SET @Day = 'Friday';
loop1: LOOP
INSERT INTO `Available Hour`
VALUES (@HourID, @Day);
IF(@HourID < 168)
THEN 
SET @HourID = @HourID + 1;
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Available`()
BEGIN
SET @UserID = 21;
SET @HourID = 21;
loop1: LOOP
INSERT INTO `Available`
VALUES (@UserID, @HourID);
IF(@UserID < 1000)
THEN 
SET @UserID = @UserID + 1;
SET @HourID = CEILING(168*Rand());
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Comes_From`()
BEGIN
SET @UserID = 1;
SET @MessageID = 1;
loop1: LOOP
INSERT INTO `Comes From`
VALUES (@UserID, @MessageID);
IF(@UserID < 1000)
THEN 
SET @UserID = @UserID + 1;
SET @MessageID = @MessageID + 1;
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Games`()
BEGIN
SET @GameID = 21;
SET @Title = 'title';
SET @OutTitle = 'title';
SET @Price = '60';
SET @Rating = 'e';
SET @Platform = 'computer';
loop1: LOOP
INSERT INTO `Game`
VALUES (@GameID, @OutTitle, @Price, @Rating, @Platform);
IF(@GameID < 1000)
THEN 
SET @GameID = @GameID + 1;
SET @OutTitle = CONCAT(@GameID, @Title);
IF(MOD(@GameID, 4) = 0)
THEN
	SET @Price = '50';
    SET @Rating = 'e';
    SET @Platform = 'computer';
END IF;
IF(MOD(@GameID, 4) = 1)
THEN
	SET @Price = '60';
    SET @Rating = 't';
    SET @Platform = 'playstation';
END IF;
IF(MOD(@GameID, 4) = 2)
THEN
	SET @Price = '30';
    SET @Rating = 'm';
    SET @Platform = 'xbox';
END IF;
IF(MOD(@GameID, 4) = 3)
THEN
	SET @Price = '40';
    SET @Rating = 'e10';
    SET @Platform = 'wii';
END IF;
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Gaming_Accounts`()
BEGIN
SET @GameAccountID = 22;
SET @UserName = 'user';
SET @OutUserName = 'user';
SET @Type = 'Steam';
loop1: LOOP
INSERT INTO `Gaming Accounts`
VALUES (@GameAccountID, @OutUserName, @Type);
IF(@GameAccountID < 1000)
THEN 
SET @GameAccountID = @GameAccountID + 1;
SET @OutUserName = CONCAT(@UserName, @GameAccountID);
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Goes_To`()
BEGIN
SET @UserID = 21;
SET @MessageID = 21;
loop1: LOOP
INSERT INTO `Goes To`
VALUES (@UserID, @MessageID);
IF(@UserID < 1000)
THEN 
SET @UserID = @UserID + 1;
SET @MessageID = @MessageID + 1;
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Have`()
BEGIN
SET @GameID = 21;
SET @TagID = 21;

loop1: LOOP
INSERT INTO `Have`
VALUES (@GameID, @TagID);
IF(@GameID < 1000)
THEN 
SET @GameID = @GameID + 1;
SET @TagID = @TagID + 1;

ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Has`()
BEGIN
SET @PreferenceID = 21;
SET @UserID = 21;

loop1: LOOP
INSERT INTO `Has`
VALUES (@PreferenceID, @UserID);
IF(@PreferenceID < 1000)
THEN 
SET @PreferenceID = @PreferenceID + 1;
SET @UserID = @UserID + 1;

ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Messages`()
BEGIN
SET @MessageID = 21;
SET @TimeStamp = '';
SET @OutTimeStamp = '1';
SET @Contents = 'message';
SET @OutContents = 'message';
loop1: LOOP
INSERT INTO `Message`
VALUES (@MessageID, @OutTimeStamp, @OutContents);
IF(@MessageID < 1000)
THEN 
SET @MessageID = @MessageID + 1;
SET @OutTimeStamp = CONCAT(@TimeStamp, @MessageID);
SET @OutContents = CONCAT(@MessageID, @Contents);
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Play_As`()
BEGIN
SET @UserID = 21;
SET @GameAccountID = 21;
loop1: LOOP
INSERT INTO `Play As`
VALUES (@UserID, @GameAccountID);
IF(@UserID < 1000)
THEN 
SET @UserID = @UserID + 1;
SET @GameAccountID = @GameAccountID + 1;
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Owns`()
BEGIN
SET @GameID = 21;
SET @UserID = 21;
loop1: LOOP
INSERT INTO `Owns`
VALUES (@GameID, @UserID);
IF(@GameID < 1000)
THEN 
SET @GameID = @GameID + 1;
SET @UserID = @UserID + 1;
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Preference`()
BEGIN
SET @PreferenceID = 21;
SET @FavoriteGenre = 'Cool Genre';
SET @FavoritePlatform = 'computer';
loop1: LOOP
INSERT INTO Preference
VALUES (@PreferenceID, @FavoriteGenre, @FavoritePlatform);
IF(@PreferenceID < 1000)
THEN 
SET @PreferenceID = @PreferenceID + 1;
IF(MOD(@PreferenceID, 4) = 0)
THEN
	SET @FavoritePlatform = 'playstation';
    SET @FavoriteGenre = 'shooter';
END IF;
IF(MOD(@PreferenceID, 4) = 1)
THEN
	SET @FavoritePlatform = 'xbox';
    SET @FavoriteGenre = 'adventure';
END IF;
IF(MOD(@PreferenceID, 4) = 2)
THEN
	SET @FavoritePlatform = 'wii';
    SET @FavoriteGenre = 'arcade';
END IF;
IF(MOD(@PreferenceID, 4) = 3)
THEN
	SET @FavoritePlatform = 'computer';
    SET @FavoriteGenre = 'rpg';
END IF;
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Rates`()
BEGIN
SET @UserRateID = 21;
SET @UserRatedID = 22;
SET @Score = CEILING(10*Rand());
SET @int = 0;
loop1: LOOP
INSERT INTO Rates
VALUES (@UserRateID, @UserRatedID, @Score);
IF(@UserRateID < 999)
THEN 
SET @UserRateID = @UserRateID + 1;
SET @UserRatedID = @UserRatedID + 1;
SET @Score = CEILING(10*Rand());
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_Tags`()
BEGIN
SET @TagID = 21;
SET @TagName = 'tagname';
SET @OutTagName = 'tagname';
SET @int = 0;
loop1: LOOP
INSERT INTO Tag
VALUES (@TagID, @OutTagName);
IF(@TagID < 1000)
THEN 
SET @TagID = @TagID + 1;
SET @OutTagName = CONCAT(@TagID, @TagName);
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_available_hour`(
	in hour_id int(11),
    in day_of_week varchar(45))
BEGIN
	CALL valid_HourID(hour_id, day_of_week, @out_value);
	IF((SELECT @out_value) = 1) THEN
		SELECT 'HourID is invalid';
	END IF;

	IF(@out_value = 0) THEN
		INSERT INTO `Available Hour`(HourID, Day)
		VALUES(hour_id, day_of_week);
	END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_1000_users`()
BEGIN
SET @UserID = 21;
SET @TimeZone = 'central';
SET @Password = 'LEAGUE';
SET @Email = 'test@test.com';
SET @OutEmail = 'test@test.com';
SET @int = 0;
loop1: LOOP
INSERT INTO User
VALUES (@UserID, @TimeZone, @Password, @OutEmail);
IF(@UserID < 1000)
THEN 
SET @UserID = @UserID + 1;
SET @OutEmail = CONCAT(@UserID, @Email);
IF(MOD(@UserID, 4) = 0)
THEN
	SET @TimeZone = 'mountain';
END IF;
IF(MOD(@UserID, 4) = 1)
THEN
	SET @TimeZone = 'central';
END IF;
IF(MOD(@UserID, 4) = 2)
THEN
	SET @TimeZone = 'eastern';
END IF;
IF(MOD(@UserID, 4) = 3)
THEN
	SET @TimeZone = 'pacific';
END IF;
ITERATE loop1;
END IF;
LEAVE loop1;
END LOOP loop1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `AH_timezone_update_delete`(
	IN userID int(11), 
	IN HourID_input int(11),
    OUT out_hour int(11))
BEGIN
IF((
SELECT TimeZone
FROM User
WHERE User.UserID = userID) = 'eastern' AND HourID_input > 2 AND HourID_input > -1 AND HourID_input < 171
)
THEN
SET out_hour = HourID_input - 3;
END IF;
IF((
SELECT TimeZone
FROM User
WHERE User.UserID = userID) = 'central' AND HourID_input > 1 AND HourID_input > -1 AND HourID_input < 170
)
THEN
SET out_hour = HourID_input - 2;
END IF;
IF((
SELECT TimeZone
FROM User
WHERE User.UserID = userID) = 'mountain' AND HourID_input > 0 AND HourID_input > -1 AND HourID_input < 169
)
THEN
SET out_hour = HourID_input - 1;
END IF;
IF((
SELECT TimeZone
FROM User
WHERE User.UserID = userID) = 'pacific' AND HourID_input > -1 AND HourID_input < 168
)
THEN
SET out_hour = HourID_input;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `change_password`(
	IN userEmail varchar(45), 
	IN olduserPassword varchar(45),
    IN newUserPassword varchar(45))
BEGIN
CALL email_seems_legit(userEmail, @out_value1);
IF((SELECT @out_value1) = 1)
THEN
	SELECT 'Email not Legit';
END IF;
CALL email_already_used(userEmail, @out_value2);
IF((SELECT @out_value2) = 0)
THEN
	SELECT 'Email is not already in use';
END IF;
CALL check_password(newUserPassword, @out_value3);
IF((SELECT @out_value3) = 1)
THEN
	SELECT 'Password not up to standards';
END IF;
IF(@out_value1 = 0 AND @out_value2 = 1 AND @out_value3 = 0)
THEN
UPDATE JoinSchema.User
SET User.Password = newUserPassword
WHERE User.Password = oldUserPassword AND User.Email = userEmail;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `check_password`(
	IN password_input varchar(45), 
	OUT outvalue3 int(11))
BEGIN
IF(CHAR_LENGTH(password_input) < 8)
THEN
    set outvalue3 = 1;
ELSE
    set outvalue3 = 0;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `change_TimeZone`(
	IN userEmail varchar(45), 
    IN userPassword varchar(45),
    IN newTimeZone varchar(45))
BEGIN
CALL email_seems_legit(userEmail, @out_value1);
IF((SELECT @out_value1) = 1)
THEN
	SELECT 'Email not Legit';
END IF;
CALL email_already_used(userEmail, @out_value2);
IF((SELECT @out_value2) = 0)
THEN
	SELECT 'Email is not already in use';
END IF;
CALL check_password(userPassword, @out_value3);
IF((SELECT @out_value3) = 1)
THEN
	SELECT 'Password not up to standards';
END IF;
SELECT @out_value1, @out_value2, @out_value3;
IF(@out_value1 = 0 AND @out_value2 = 1 AND @out_value3 = 0)
THEN
UPDATE User
SET User.TimeZone = newTimeZone
WHERE User.Password = userPassword AND User.Email = userEmail;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_user`(
	IN userEmail varchar(45), 
	IN userPassword varchar(45),
    IN userTimeZone varchar(45),
    OUT status int(11))
BEGIN
	CALL email_seems_legit(userEmail, @out_value1);
	IF ((SELECT @out_value1) = 1) THEN
		SET status = 1;
	END IF;
	
    CALL email_already_used(userEmail, @out_value2);
	IF ((SELECT @out_value2) = 1) THEN
		SET status = 2;
	END IF;
	
    CALL check_password(userPassword, @out_value3);
	IF ((SELECT @out_value3) = 1) THEN
		SET status = 3;
	END IF;
	
    IF (@out_value1 = 0 AND @out_value2 = 0 AND @out_value3 = 0) THEN
		INSERT INTO User(Email, User.Password, TimeZone)
		VALUES(userEmail, userPassword, userTimeZone);
            
		SET status = 0;
	END IF;
    
    SELECT UserID, Email, Password
	FROM User
	WHERE Email = userEmail
		AND Password = userPassword
		AND TimeZone = userTimeZone;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `email_already_used`(
	IN userEmail varchar(45),
    OUT outvalue2 int(11))
BEGIN
	IF NOT EXISTS( 
		SELECT *
        FROM User 
        WHERE User.email = userEmail) THEN
		SET outvalue2 = 0;
	ELSE
		SET outvalue2 = 1;
	END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `email_seems_legit`(
	IN userEmail varchar(45), 
	OUT outvalue1 int(11))
BEGIN
IF (userEmail LIKE '%@%.com')
THEN
    set outvalue1 = 0;
ELSE
    set outvalue1 = 1;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_game_by_id`(
	IN gameID_input int(11))
BEGIN
	SELECT Game.GameID, Title, Price, Rating
    FROM Game
    WHERE Game.GameID = gameID_input;
    
	SELECT Tag.TagName
    FROM Game, Tag, Have
    WHERE Game.GameID = gameID_input AND Game.GameID = Have.GameID AND Have.TagID = Tag.TagID;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_game_by_title`(
	IN gameTitle varchar(45))
BEGIN
	SELECT GameID, Title, Price, Rating
    FROM Game
    WHERE LOWER(Title) LIKE CONCAT(gameTitle, '%');
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `hourID_valid_and_insert`(
	IN HourID_input int(11),
    IN userID int(11),
    OUT outvalue int(11), 
    OUT day_inserted varchar(45),
    OUT hour_to_insert int(11)
    )
BEGIN
IF((
SELECT TimeZone
FROM User
WHERE User.UserID = userID) = 'eastern' AND HourID_input > 2 AND HourID_input > -1 AND HourID_input < 171
)
THEN
SET hour_to_insert = HourID_input - 3;
END IF;
IF((
SELECT TimeZone
FROM User
WHERE User.UserID = userID) = 'central' AND HourID_input > 1 AND HourID_input > -1 AND HourID_input < 170
)
THEN
SET hour_to_insert = HourID_input - 2;
END IF;
IF((
SELECT TimeZone
FROM User
WHERE User.UserID = userID) = 'mountain' AND HourID_input > 0 AND HourID_input > -1 AND HourID_input < 169
)
THEN
SET hour_to_insert = HourID_input - 1;
END IF;
IF((
SELECT TimeZone
FROM User
WHERE User.UserID = userID) = 'pacific' AND HourID_input > -1 AND HourID_input < 168
)
THEN
SET hour_to_insert = HourID_input;
END IF;
IF (hour_to_insert > -1 AND hour_to_insert < 23)
THEN 
SET day_inserted = 'Sunday';
End IF; 
IF (hour_to_insert > 23 AND hour_to_insert < 48)
THEN 
SET day_inserted = 'monday';
End IF;
IF (hour_to_insert > 47 AND hour_to_insert < 72)
THEN 
SET day_inserted = 'tuesday';
End IF; 
IF (hour_to_insert > 71 AND hour_to_insert < 96)
THEN 
SET day_inserted = 'wednesday';
End IF; 
IF (hour_to_insert > 95 AND hour_to_insert < 120)
THEN 
SET day_inserted = 'thursday';
End IF; 
IF (hour_to_insert > 119 AND hour_to_insert < 148)
THEN 
SET day_inserted = 'friday';
End IF;
IF (hour_to_insert > 147 AND hour_to_insert < 168)
THEN 
SET day_inserted = 'saturday';
End IF;
IF NOT EXISTS(
SELECT *
FROM `Available Hour`
WHERE `Available Hour`.HourID = hour_to_insert AND `Available Hour`.Day = day_inserted)
THEN
	INSERT INTO `Available Hour`(HourID, Day)
	VALUES(hour_to_insert, day_inserted);
END IF;
IF EXISTS (
SELECT *
FROM `Available Hour`
WHERE `Available Hour`.HourID = hour_to_insert
)
THEN
    set outvalue = 0;
ELSE
    set outvalue = 1;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `hourID_valid`(
	IN HourID_input int(11), 
	OUT outvalue int(11), 
    OUT day_inserted varchar(45))
BEGIN
IF (HourID_input > -1 AND HourID_input < 168 AND NOT EXISTS (
SELECT *
FROM `Available Hour`
WHERE `Available Hour`.HourID = HourID_input
))
THEN
IF (HourID_input > -1 AND HourID_input < 23)
THEN 
SET day_inserted = 'Sunday';
END IF; 
IF (HourID_input > 23 AND HourID_input < 48)
THEN 
SET day_inserted = 'monday';
END IF;
IF (HourID_input > 47 AND HourID_input < 72)
THEN 
SET day_inserted = 'tuesday';
END IF; 
IF (HourID_input > 71 AND HourID_input < 96)
THEN 
SET day_inserted = 'wednesday';
END IF; 
IF (HourID_input > 95 AND HourID_input < 120)
THEN 
SET day_inserted = 'thursday';
END IF; 
IF (HourID_input > 119 AND HourID_input < 148)
THEN 
SET day_inserted = 'friday';
END IF;
IF (HourID_input > 147 AND HourID_input < 168)
THEN 
SET day_inserted = 'saturday';
END IF;
INSERT INTO `Available Hour`(HourID, Day)
VALUES(HourID_input, day_inserted);
END IF;
IF EXISTS (
SELECT *
FROM `Available Hour`
WHERE `Available Hour`.HourID = HourID_input
)
THEN
    set outvalue = 0;
ELSE
    set outvalue = 1;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `login_function`(
	IN userEmail varchar(45), 
    IN userPassword varchar(45),
    OUT outvalue int(11))
BEGIN
	CALL email_seems_legit(userEmail, @out_value1);
    CALL email_already_used(userEmail, @out_value2);
	CALL check_password(userPassword, @out_value3);
    IF(@out_value1 = 0 AND @out_value2 = 1 AND @out_value3 = 0) THEN
		SELECT User.UserID
		INTO outvalue
		FROM User
		WHERE User.Email = userEmail AND User.Password = userPassword;
	END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `rating_valid`(
	IN rating int(11), 
	OUT outvalue int(11))
BEGIN
IF (rating > -1 AND rating < 11)
THEN
    set outvalue = 0;
ELSE
    set outvalue = 1;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `user_add_AH`(
	IN userIdentifier int(11), 
    IN hourIdentifier int(11))
BEGIN
SET @s = NULL;
CALL userID_valid(userIdentifier, @out_value1);
CALL hourID_valid_and_insert(hourIdentifier, userIdentifier, @out_value2, @out_value3, @out_hour);
IF  ((SELECT count(*)
		FROM Available
		WHERE UserID = userIdentifier AND HourID = @out_hour) = 0)
        THEN
        SET @s = 1;
        ELSE
        SET @s = 0;
END IF;
IF(@out_value1 = 0 AND @out_value2 = 0 AND @s = 1)
THEN
	INSERT INTO Available(UserId, HourID)
	VALUES(userIdentifier, @out_hour);
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `user_delete_AH`(
	IN userID int(11), 
	IN hourID int(11))
BEGIN
CALL userID_valid(userID, @out_value1);
CALL hourID_valid(hourID, @out_value2, @out_day);
CALL AH_timezone_update_delete(userID, hourID, @out_hour);
IF(@out_value1 = 0 AND @out_value2 = 0)
THEN
	DELETE FROM Available
	WHERE Available.UserID = userID AND Available.HourID = @out_hour;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `userID_valid`(
	IN userID int(11), 
	OUT outvalue int(11))
BEGIN
IF EXISTS (
	SELECT *
	FROM User
	WHERE UserID = userID
)
THEN
    set outvalue = 0;
ELSE
    set outvalue = 1;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `user_rates_user`(
	IN userID1 varchar(45), 
	IN userID2 varchar(45), 
    IN rating int(11))
BEGIN
CALL userID_valid(userID1, @out_value1);
CALL userID_valid(userID2, @out_value1);
CALL rating_valid(rating, @out_value3);
IF(@out_value1 = 0 AND @out_value2 = 0 AND @out_value3 = 0 AND userID1 != userID2 AND
NOT EXISTS(
	SELECT *
	FROM Rates
	WHERE Rates.UserRateID = userID1 AND Rates.UserRatedID = userID2
))
THEN
	INSERT INTO JoinSchema.Rates(UserRateID, UserRatedID, Score)
	VALUES(userID1, userID2, rating);
END IF;
IF(@out_value1 = 0 AND @out_value2 = 0 AND @out_value3 = 0 AND userID1 != userID2 AND EXISTS(
	SELECT *
	FROM Rates
	WHERE Rates.UserRateID = userID1 AND Rates.UserRatedID = userID2
))
THEN
	UPDATE JoinSchema.Rates
	SET Rates.Score = rating
	WHERE Rates.UserRateID = userID1 AND Rates.UserRatedID = userID2;
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `valid_HourID`(
	IN hour_id int(11), 
    IN day_of_week varchar(45), 
    OUT outvalue int(11))
BEGIN
IF  ((hour_id > -1 AND hour_id < 23 AND day_of_week = 'sunday') OR
	(hour_id > 23 AND hour_id < 48 AND day_of_week = 'monday') OR
	(hour_id > 47 AND hour_id < 72 AND day_of_week = 'tuesday') OR
	(hour_id > 71 AND hour_id < 96 AND day_of_week = 'wednesday') OR
	(hour_id > 95 AND hour_id < 120 AND day_of_week = 'thursday') OR
	(hour_id > 119 AND hour_id < 148 AND day_of_week = 'friday') OR
	(hour_id > 147 AND hour_id < 168 AND day_of_week = 'saturday'))
THEN
	SET outvalue = 0;
ELSE 
	SET outvalue = 1;
END IF;
END$$
DELIMITER ;


CALL add_1000_users();
CALL add_1000_Tags();
CALL add_1000_Rates();
CALL add_1000_Preference();
CALL add_1000_Play_As();
CALL add_1000_Owns();
CALL add_1000_Messages();
CALL add_1000_Is_Friends_With();
CALL add_1000_Have();
CALL add_1000_Has();
CALL add_1000_Goes_To();
CALL add_1000_Gaming_Accounts();
CALL add_1000_Games;
CALL add_1000_Comes_From;
CALL add_1000_Available;
CALL add_1000_AH();

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
